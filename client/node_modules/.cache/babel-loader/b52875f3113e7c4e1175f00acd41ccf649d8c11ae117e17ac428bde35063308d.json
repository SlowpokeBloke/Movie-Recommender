{"ast":null,"code":"function Validation(values) {\n  let error = {};\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;\n  if (values.full_name === \"\") {\n    error.full_name = \"Name should not be empty\";\n  } else {\n    error.full_name = \"\";\n  }\n  if (values.age === \"\") {\n    error.age = \"Age should not be empty\";\n  } else if (values.age === 0) {\n    error.age = \"Age cannot be zero\";\n  } else if (values.age < 0) {\n    error.age = \"Age cannot less than zero\";\n  } else {\n    error.age = \"\";\n  }\n  if (values.email === \"\") {\n    error.email = \"Email should not be empty\";\n  } else if (!email_pattern.test(values.email)) {\n    error.email = \"Email format is invalid\";\n  } else {\n    error.email = \"\";\n  }\n  if (values.password === \"\") {\n    error.password = \"Password should not be empty\";\n  } else if (!password_pattern.test(values.password)) {\n    error.password = \"Password must contain at least 8 characters, including one digit, one lowercase letter, and one uppercase letter\";\n  } else {\n    error.password = \"\";\n  }\n  return error;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","error","email_pattern","password_pattern","full_name","age","email","test","password","_c","$RefreshReg$"],"sources":["/Users/gissm/Desktop/database systems/MovieRecommender/client/src/components/CreateAccountValidation.jsx"],"sourcesContent":["function Validation(values) {\n    let error = {};\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;\n\n    if (values.full_name === \"\") {\n        error.full_name = \"Name should not be empty\";\n    } else {\n        error.full_name = \"\";\n    }\n\n    if (values.age === \"\") {\n        error.age = \"Age should not be empty\";\n    } else if (values.age === 0) {\n        error.age = \"Age cannot be zero\";\n    } else if (values.age < 0) {\n        error.age = \"Age cannot less than zero\";\n    } else {\n        error.age = \"\";\n    }\n\n    if (values.email === \"\") {\n        error.email = \"Email should not be empty\";\n    } else if (!email_pattern.test(values.email)) {\n        error.email = \"Email format is invalid\";\n    } else {\n        error.email = \"\";\n    }\n\n    if (values.password === \"\") {\n        error.password = \"Password should not be empty\";\n    } else if (!password_pattern.test(values.password)) {\n        error.password = \"Password must contain at least 8 characters, including one digit, one lowercase letter, and one uppercase letter\";\n    } else {\n        error.password = \"\";\n    }\n\n    return error;\n}\n\nexport default Validation;\n"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAE;EACxB,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,MAAMC,aAAa,GAAG,4BAA4B;EAClD,MAAMC,gBAAgB,GAAG,iDAAiD;EAE1E,IAAIH,MAAM,CAACI,SAAS,KAAK,EAAE,EAAE;IACzBH,KAAK,CAACG,SAAS,GAAG,0BAA0B;EAChD,CAAC,MAAM;IACHH,KAAK,CAACG,SAAS,GAAG,EAAE;EACxB;EAEA,IAAIJ,MAAM,CAACK,GAAG,KAAK,EAAE,EAAE;IACnBJ,KAAK,CAACI,GAAG,GAAG,yBAAyB;EACzC,CAAC,MAAM,IAAIL,MAAM,CAACK,GAAG,KAAK,CAAC,EAAE;IACzBJ,KAAK,CAACI,GAAG,GAAG,oBAAoB;EACpC,CAAC,MAAM,IAAIL,MAAM,CAACK,GAAG,GAAG,CAAC,EAAE;IACvBJ,KAAK,CAACI,GAAG,GAAG,2BAA2B;EAC3C,CAAC,MAAM;IACHJ,KAAK,CAACI,GAAG,GAAG,EAAE;EAClB;EAEA,IAAIL,MAAM,CAACM,KAAK,KAAK,EAAE,EAAE;IACrBL,KAAK,CAACK,KAAK,GAAG,2BAA2B;EAC7C,CAAC,MAAM,IAAI,CAACJ,aAAa,CAACK,IAAI,CAACP,MAAM,CAACM,KAAK,CAAC,EAAE;IAC1CL,KAAK,CAACK,KAAK,GAAG,yBAAyB;EAC3C,CAAC,MAAM;IACHL,KAAK,CAACK,KAAK,GAAG,EAAE;EACpB;EAEA,IAAIN,MAAM,CAACQ,QAAQ,KAAK,EAAE,EAAE;IACxBP,KAAK,CAACO,QAAQ,GAAG,8BAA8B;EACnD,CAAC,MAAM,IAAI,CAACL,gBAAgB,CAACI,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,EAAE;IAChDP,KAAK,CAACO,QAAQ,GAAG,kHAAkH;EACvI,CAAC,MAAM;IACHP,KAAK,CAACO,QAAQ,GAAG,EAAE;EACvB;EAEA,OAAOP,KAAK;AAChB;AAACQ,EAAA,GAtCQV,UAAU;AAwCnB,eAAeA,UAAU;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}